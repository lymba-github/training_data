[
    {
        "instruction": "List the top 5 highest rated movies released in the 21st century.",
        "output": "MATCH (m:Movie)<-[r:RATED]-(u:User) WHERE m.year >= 2000 AND m.year <= 2100 RETURN m.title, AVG(r.rating) AS average_rating ORDER BY average_rating DESC LIMIT 5"
    },
    {
        "instruction": "Find the genres of movies that Tom Hanks has acted in.",
        "output": "MATCH (a:Actor {name: 'Tom Hanks'})-[:ACTED_IN]->(m:Movie)-[:IN_GENRE]->(g:Genre) RETURN DISTINCT g.name AS genre"
    },
    {
        "instruction": "List the movies that were directed by Steven Spielberg and also have Tom Hanks as an actor.",
        "output": "MATCH (d:Director {name: 'Steven Spielberg'})-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(a:Actor {name: 'Tom Hanks'}) RETURN m.title"
    },
    {
        "instruction": "Show the actors who played in action movies released in the 2000s.",
        "output": "MATCH (m:Movie)-[:IN_GENRE]->(g:Genre {name: 'Action'}) WHERE m.year >= 2000 AND m.year < 2010 MATCH (m)<-[:ACTED_IN]-(a:Actor) RETURN DISTINCT a.name"
    },
    {
        "instruction": "Show the top 5 highest-grossing movies directed by Christopher Nolan.",
        "output": "MATCH (d:Director {name: 'Christopher Nolan'})-[:DIRECTED]->(m:Movie) WHERE m.revenue IS NOT NULL RETURN m.title, m.revenue ORDER BY m.revenue DESC LIMIT 5"
    },
    {
        "instruction": "Find the actors who have appeared in both drama and comedy movies.",
        "output": "MATCH (g1:Genre {name: 'Drama'})<-[:IN_GENRE]-(m1:Movie)<-[:ACTED_IN]-(a:Actor) WITH a MATCH (g2:Genre {name: 'Comedy'})<-[:IN_GENRE]-(m2:Movie)<-[:ACTED_IN]-(a:Actor) RETURN DISTINCT a.name"
    },
    {
        "instruction": "List the countries in which movies directed by Quentin Tarantino have been filmed.",
        "output": "MATCH (d:Director {name: 'Quentin Tarantino'})-[:DIRECTED]->(m:Movie) UNWIND m.countries AS country RETURN DISTINCT country"
    },
    {
        "instruction": "Find the average rating of movies released in each year in the 21st century.",
        "output": "MATCH (m:Movie) WHERE m.year >= 2000 AND m.year < 2100 WITH m.year AS releaseYear, COALESCE(m.imdbRating, 0) AS rating RETURN releaseYear, AVG(rating) AS averageRating ORDER BY releaseYear"
    },
    {
        "instruction": "List the actors who have acted in movies directed by both Steven Spielberg and Christopher Nolan.",
        "output": "MATCH (a:Actor)-[:ACTED_IN]->(m1:Movie)<-[:DIRECTED]-(d1:Director {name: 'Steven Spielberg'}) WITH a, m1 MATCH (a)-[:ACTED_IN]->(m2:Movie)<-[:DIRECTED]-(d2:Director {name: 'Christopher Nolan'}) RETURN DISTINCT a.name"
    },
    {
        "instruction": "Find the top 5 highest-rated movies of the 'Action' genre released in the 2010s.",
        "output": "MATCH (g:Genre {name: 'Action'})<-[:IN_GENRE]-(m:Movie) WHERE m.year >= 2010 AND m.year < 2020 WITH m, COALESCE(m.imdbRating, 0) AS rating RETURN m.title AS title, m.year AS releaseYear, rating ORDER BY rating DESC LIMIT 5"
    },
    {
        "instruction": "List the actors who have appeared in more than 5 movies in the 21st century.",
        "output": "MATCH (a:Actor)-[:ACTED_IN]->(m:Movie) WHERE m.year >= 2000 AND m.year <= 2100 WITH a, COUNT(m) AS movie_count WHERE movie_count > 5 RETURN a.name, movie_count"
    },
    {
        "instruction": "Find the average budget of movies directed by Christopher Nolan.",
        "output": "MATCH (d:Director {name: 'Christopher Nolan'})-[:DIRECTED]->(m:Movie) WHERE m.budget IS NOT NULL RETURN AVG(m.budget) AS average_budget"
    },
    {
        "instruction": "Show the genres of movies in which Tom Hanks and Robin Wright have both acted.",
        "output": "MATCH (t:Actor {name: 'Tom Hanks'})-[:ACTED_IN]->(tm:Movie) MATCH (m:Actor {name: 'Robin Wright'})-[:ACTED_IN]->(mm:Movie) WITH tm, mm WHERE tm = mm MATCH (tm)-[:IN_GENRE]->(genre:Genre) RETURN DISTINCT genre.name"
    },
    {
        "instruction": "List the top 5 highest-grossing movies with a runtime of over 2 hours.",
        "output": "MATCH (m:Movie) WHERE m.runtime > 120 AND m.revenue IS NOT NULL RETURN m.title, m.revenue ORDER BY m.revenue DESC LIMIT 5"
    },
    {
        "instruction": "Find the actors who have appeared in movies with a budget over $100 million and have a rating of at least 8.0.",
        "output": "MATCH (a:Actor)-[:ACTED_IN]->(m:Movie) WHERE m.budget > 100000000 AND m.imdbRating >= 8.0 RETURN DISTINCT a.name"
    },
    {
        "instruction": "Find the directors who have directed movies in multiple languages.",
        "output": "MATCH (d:Director)-[:DIRECTED]->(m:Movie) WHERE SIZE(m.languages) > 1 RETURN DISTINCT d.name"
    },
    {
        "instruction": "List the movies that were released in the same year as 'Inception' and have the same genre as 'Inception'.",
        "output": "MATCH (inception:Movie {title: 'Inception'}) MATCH (inception)-[:IN_GENRE]->(genre:Genre) MATCH (similar:Movie {year: inception.year}) WHERE (similar)-[:IN_GENRE]->(genre) AND NOT similar = inception RETURN similar.title"
    },
    {
        "instruction": "Find the average rating of movies released in each decade since the 1960s.",
        "output": "MATCH (m:Movie) WHERE m.year >= 1960 WITH m.year AS releaseYear, COALESCE(m.imdbRating, 0) AS rating WITH releaseYear, rating, (releaseYear / 10) * 10 AS decade RETURN decade, AVG(rating) AS averageRating ORDER BY decade"
    },
    {
        "instruction": "Find the actors who have acted in movies in which the budget is at least 10 times the average budget of all movies.",
        "output": "MATCH (a:Actor)-[:ACTED_IN]->(m:Movie) WITH AVG(m.budget) * 10 AS threshold, a, m WHERE m.budget >= threshold RETURN DISTINCT a.name"
    },
    {
        "instruction": "List the movies that have been released in more than one language and have a runtime of at least 150 minutes.",
        "output": "MATCH (m:Movie) WHERE SIZE(m.languages) > 1 AND m.runtime >= 150 RETURN m.title"
    },
    {
        "instruction": "Find the actors who have appeared in at least one movie in each decade since the 1970s (i.e., 1970s, 1980s, 1990s, 2000s, 2010s).",
        "output": "MATCH (a:Actor)-[:ACTED_IN]->(m:Movie) WHERE m.year >= 1970 AND m.year <= 2020 WITH a, COLLECT(DISTINCT SUBSTRING(toString(m.year), 0, 4)) AS decades WHERE SIZE(decades) = 5 RETURN a.name"
    },
    {
        "instruction": "List the directors who have directed both high-budget (budget > $100 million) and low-budget (budget < $10 million) movies.",
        "output": "MATCH (d:Director)-[:DIRECTED]->(m:Movie) WITH d, COLLECT(DISTINCT CASE WHEN m.budget > 100000000 THEN 'high-budget' WHEN m.budget < 10000000 THEN 'low-budget' END) AS budgets WHERE 'high-budget' IN budgets AND 'low-budget' IN budgets RETURN d.name"
    },
    {
        "instruction": "List the top 5 highest-rated directors based on the average rating of their movies.",
        "output": "MATCH (d:Director)-[:DIRECTED]->(m:Movie) WITH d, COLLECT(COALESCE(m.imdbRating, 0)) AS ratings WITH d, ratings, REDUCE(s = 0, rating IN ratings | s + rating) AS totalRating WITH d, ratings, totalRating, SIZE(ratings) AS numberOfMovies WITH d, totalRating / numberOfMovies AS averageRating RETURN d.name AS directorName, averageRating ORDER BY averageRating DESC LIMIT 5"
    },
    {
        "instruction": "List the actors who have acted in movies with the highest and lowest budgets in the dataset.",
        "output": "MATCH (a:Actor)-[:ACTED_IN]->(m:Movie) WHERE NOT m.budget IS NULL WITH a, m, COLLECT(m) AS movies ORDER BY m.budget ASC WITH a, movies[0] AS lowestBudgetMovie RETURN a.name AS ActorName, lowestBudgetMovie.title AS MovieTitle, lowestBudgetMovie.budget AS Budget ORDER BY Budget ASC UNION MATCH (a:Actor)-[:ACTED_IN]->(m:Movie) WHERE NOT m.budget IS NULL WITH a, m, COLLECT(m) AS movies ORDER BY m.budget DESC WITH a, movies[0] AS highestBudgetMovie RETURN a.name AS ActorName, highestBudgetMovie.title AS MovieTitle, highestBudgetMovie.budget AS Budget ORDER BY Budget DESC"
    },
    {
        "instruction": "List the movies in which the actor Robert De Niro has played a gangster role.",
        "output": "MATCH (a:Actor {name: 'Robert De Niro'})-[:ACTED_IN]->(m:Movie)-[:IN_GENRE]->(g:Genre {name: 'Crime'}) RETURN m.title"
    },
    {
        "instruction": "Find the actors who have appeared in at least one movie in each genre.",
        "output": "MATCH (a:Actor) WHERE ALL(genre IN apoc.coll.toSet([(a)-[:ACTED_IN]->(:Movie)-[:IN_GENRE]->(g:Genre) | g.name]) WHERE genre IS NOT NULL) RETURN a.name"
    },
    {
        "instruction": "Find all the genres and their movies.",
        "output": "MATCH (g:Genre)<-[:IN_GENRE]-(m:Movie) RETURN g.name, COLLECT(DISTINCT m.title) AS movies"
    },
    {
        "instruction": "Show me the top-rated movies by a user named 'John'.",
        "output": "MATCH (u:User {name: 'John'})-[:RATED]->(m:Movie) RETURN m.title ORDER BY m.imdbRating DESC LIMIT 10"
    },
    {
        "instruction": "Find movies released in the year 2000 with a budget greater than 50 million.",
        "output": "MATCH (m:Movie {year: 2000}) WHERE m.budget > 5000000 RETURN m.title"
    },
    {
        "instruction": "Retrieve information about movies in the 'Action' genre with more than 7.5 IMDb rating.",
        "output": "MATCH (g:Genre {name: 'Action'})<-[:IN_GENRE]-(m:Movie) WHERE m.imdbRating > 7.5 RETURN m.title"
    },
    {
        "instruction": "Show movies directed by 'James Cameron' that have generated over 500 million in revenue.",
        "output": "MATCH (d:Director {name: 'James Cameron'})-[:DIRECTED]->(m:Movie) WHERE m.revenue > 500000000 RETURN m.title"
    },
    {
        "instruction": "Find all users who have rated 'Inception'.",
        "output": "MATCH (m:Movie {title: 'Inception'})<-[:RATED]-(u:User) RETURN u.name"
    },
    {
        "instruction": "Retrieve details of actors born in 'New York' who have acted in at least one movie.",
        "output": "MATCH (a:Actor {bornIn: 'New York'})-[:ACTED_IN]->(m:Movie) RETURN a.name, COLLECT(DISTINCT m.title) AS movies"
    },
    {
        "instruction": "Show me movies that have 'Tom Hanks' as an actor and 'Steven Spielberg' as a director.",
        "output": "MATCH (m:Movie)<-[:ACTED_IN]-(a:Actor {name: 'Tom Hanks'}), (m)<-[:DIRECTED]-(d:Director {name: 'Steven Spielberg'}) RETURN m.title"
    },
    {
        "instruction": "List movies with 'Action' and 'Sci-Fi' genres released in the 21st century.",
        "output": "MATCH (m:Movie)-[:IN_GENRE]->(g:Genre) WHERE m.year >= 2000 AND m.year < 2100 AND g.name IN ['Action', 'Sci-Fi'] RETURN m.title"
    },
    {
        "instruction": "Find the names of all genres.",
        "output": "MATCH (g:Genre) RETURN DISTINCT g.name"
    },
    {
        "instruction": "List the top 5 movies with the highest IMDb votes.",
        "output": "MATCH (m:Movie) WHERE m.imdbVotes IS NOT NULL RETURN m.title, m.imdbVotes ORDER BY m.imdbVotes DESC LIMIT 5"
    },
    {
        "instruction": "Get the biography of the actor named 'Tom Hanks.'",
        "output": "MATCH (a:Actor {name: 'Tom Hanks'}) RETURN a.bio"
    },
    {
        "instruction": "Find movies released in 2007 with a runtime over than 150 minutes.",
        "output": "MATCH (m:Movie) WHERE m.year = 2007 AND m.runtime > 150 RETURN m.title"
    },
    {
        "instruction": "List the genres of the movie with the title '12 Angry Men'.",
        "output": "MATCH (m:Movie {title: '12 Angry Men'})-[:IN_GENRE]->(g:Genre) RETURN g.name"
    },
    {
        "instruction": "Find all users who have rated movies and the number of movies they have rated.",
        "output": "MATCH (u:User)-[:RATED]->(m:Movie) RETURN u.name, COUNT(m) AS numRatings"
    },
    {
        "instruction": "Get the names of directors who were born in the United States.",
        "output": "MATCH (d:Director) WHERE d.bornIn = 'United States' RETURN d.name"
    },
    {
        "instruction": "Find movies that 'Tom Cruise' acted in and were released in the 2000s.",
        "output": "MATCH (a:Actor {name: 'Tom Cruise'})-[:ACTED_IN]->(m:Movie) WHERE m.year >= 2000 AND m.year < 2010 RETURN m.title"
    },
    {
        "instruction": "List the countries where movies have been released.",
        "output": "MATCH (m:Movie) WHERE m.countries IS NOT NULL UNWIND m.countries AS country RETURN DISTINCT country"
    },
    {
        "instruction": "For the top 10 directors who have the highest average IMDb ratings of their movies, list the names of actors they have worked with.",
        "output": "MATCH (d:Director)-[:DIRECTED]->(m:Movie) WHERE d.name IS NOT NULL WITH d, AVG(COALESCE(m.imdbRating,0)) AS avgRating ORDER BY avgRating DESC LIMIT 10 MATCH (m)<-[:ACTED_IN]-(a:Actor) RETURN d.name AS directorName, COLLECT(DISTINCT a.name) AS actorsWorkedWith"
    },
    {
        "instruction": "List all the genres and the directors who have made their maximum films in that genre",
        "output": "MATCH (d:Director)-[:DIRECTED]->(m:Movie)-[:IN_GENRE]->(g:Genre) WITH g, d, COUNT(m) AS movieCount ORDER BY g.name, movieCount DESC WITH g, COLLECT({name: d.name, count: movieCount})[0] AS topDirector RETURN g.name AS Genre, topDirector.name AS Director, topDirector.count AS MovieCount"
    },
    {
        "instruction": "For each user, list the user and their movie of the highest rating, and the actors in that film.",
        "output": "MATCH (u:User)-[:RATED]->(m:Movie) WITH u, m ORDER BY m.imdbRating DESC WITH u, COLLECT(m)[0] AS topRatedMovie MATCH (topRatedMovie)<-[:ACTED_IN]-(a:Actor) RETURN u.name, topRatedMovie.title, COLLECT(a.name) AS actors"
    },
    {
        "instruction": "For crime genre movie, list the movies which has been most number of users that have rated it",
        "output": "MATCH (g:Genre {name: 'Crime'})<-[:IN_GENRE]-(m:Movie)<-[:RATED]-(u:User) WITH m, COUNT(u) AS numRatings ORDER BY numRatings DESC RETURN m.title AS movieTitle, numRatings"
    },
    {
        "instruction": "List all the movies which has been directed by and acted in by the same person",
        "output": "MATCH (p:Person)-[:DIRECTED|:ACTED_IN]->(m:Movie) WHERE (p)-[:DIRECTED]->() AND (p)-[:ACTED_IN]->() RETURN m.title"
    },
    {
        "instruction": "For every director, find the actor who they have collaborated with the most",
        "output": "MATCH (d:Director)-[:DIRECTED]->(m:Movie)<-[:ACTED_IN]-(a:Actor) WITH d, a, COUNT(*) AS collaborationCount ORDER BY collaborationCount DESC RETURN d.name, COLLECT(a.name)[0] AS mostCollaboratedActor"
    }
]